services:
  nginx:
    container_name: mm-nginx
    build:
      context: .
      dockerfile_inline: |
        FROM nginx:1.28.0
        COPY ./frontend/dist/frontend-angular/browser /usr/share/nginx/frontend
        COPY ./nginx/templates /etc/nginx/templates
        COPY ./nginx/nginx.conf /etc/nginx/nginx.conf
    env_file:
      - ./.env
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - app-net

  money-manager:
    container_name: money-manager
    build: ./
    env_file:
      - ./.env
    networks:
      - app-net

  postgres:
    container_name: mm-postgres
    image: postgres:17
    restart: always
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net
    expose:
      - "${POSTGRES_PORT}"
    command: [ "postgres", "-p", "${POSTGRES_PORT}"]

  redis-tokens:
    container_name: mm-redis-tokens
    image: redis/redis-stack-server:7.4.0-v4
    restart: always
    env_file:
      - ./.env
    volumes:
      - redis-tokens-data:/data
    networks:
      - app-net
    expose:
      - "${REDIS_PORT}"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--port", "${REDIS_PORT}"]

volumes:
  pgdata:
  redis-tokens-data:

networks:
  app-net:
    driver: bridge